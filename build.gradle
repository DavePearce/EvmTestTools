/*
 * Copyright 2022 ConsenSys Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software dis-
 * tributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id('io.github.gradle-nexus.publish-plugin') version "1.1.0"
}
// Apply the java plugin to add support for Java
apply plugin: 'java'
// Apply eclipse plugin to add support for Eclipse
apply plugin: 'eclipse'
// Apply application plugin for generating start scripts
apply plugin: 'application'
// Stuff needed for publishing
apply plugin: 'maven-publish'
apply plugin: 'signing'

// ======================================================================
// Java Build
// ======================================================================

repositories {
    // Use MavenCentral for resolving dependencies
    mavenCentral()
}

group = 'org.whiley'
version = '0.3.21'

java {
    withJavadocJar()
    withSourcesJar()
}

// In this section you declare the dependencies for your production and test code

dependencies {
    implementation("commons-cli:commons-cli:1.5.0")    
    implementation("org.json:org.json:chargebee-1.0")
    implementation("org.apache.commons:commons-lang3:3.12.0")    
    //
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
}

// ======================================================================
// Java Application
// ======================================================================

application {
    mainClass = 'evmtools.Main'
    applicationName = 'evmtools'
}

// A default task for convert reference tests into the trace format
// required for testing the Dafny evm.
task gen(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'evmtools.Main'
    // arguments to pass to the application
    args '-fork'
    args 'Berlin'
    args '-dir'
    args 'fixtures'
    args '-out'
    args 'output'    
}

// ======================================================================
// Maven Central
// ======================================================================

nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                artifactId='evmtools'
                name = 'EVM Tools'
                description = 'A tool for generating reference tests with full trace data.'
                url = 'https://github.com/DavePearce/EvmTools'                
                scm {
                    url = 'https://github.com/DavePearce/EvmTools'
                }
                
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                
                developers {
                    developer {
                        id = 'redjamjar'
                        name = 'David J. Pearce'
                        email = 'david.pearce@ecs.vuw.ac.nz'
                    }
                }
            }            
        }
    }
}


signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
